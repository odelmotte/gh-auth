# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - id: auth
        uses: odelmotte/gh-auth/auth@main

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: pwsh
        run: |
          Write-Host "federatedToken: ${{ steps.auth.outputs.federatedToken }}"
          Write-Host "issuer: ${{ steps.auth.outputs.issuer }}"
          Write-Host "subjectClaim: ${{ steps.auth.outputs.subjectClaim }}"

          ${{ steps.auth.outputs.federatedToken }} | Set-Content "federatedToken-build.txt"

      - uses: actions/upload-artifact
        with:
          name: fed-build
          path: federatedToken-build.txt
          if-no-files-found: ignore
  deploy:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    environment: deploy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - id: auth
        uses: odelmotte/gh-auth/auth@main

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: pwsh
        run: |
          Write-Host "federatedToken: ${{ steps.auth.outputs.federatedToken }}"
          Write-Host "issuer: ${{ steps.auth.outputs.issuer }}"
          Write-Host "subjectClaim: ${{ steps.auth.outputs.subjectClaim }}"

          ${{ steps.auth.outputs.federatedToken }} | Set-Content "federatedToken-env.txt"
      - uses: actions/upload-artifact
        with:
          name: fed-env
          path: federatedToken-build.txt
          if-no-files-found: ignore
